// Generated by CoffeeScript 1.8.0
(function() {
  var load, xobj;

  xobj = new XMLHttpRequest();

  xobj.open("GET", 'graph.json', true);

  xobj.setRequestHeader("Content-type", "application/json");

  xobj.onreadystatechange = function() {
    var json;
    if (xobj.readyState === 4 && xobj.status === 200) {
      json = JSON.parse(xobj.responseText);
      return load(json);
    }
  };

  xobj.send();

  load = function(json) {
    var colaGraph, colad3, color, graph, graphEdges, graphNodes, height, node, nodeIndices, path, svg, width;
    graph = new JsonGraph(json);
    color = d3.scale.category20();
    width = 1600;
    height = 900;
    colad3 = cola.d3adaptor().size([width, height]);
    svg = d3.select("body").append("svg").attr("width", width).attr("height", height);
    graphNodes = [];
    graphEdges = [];
    nodeIndices = {};
    graph.getNodes().forEach(function(node, i) {
      graphNodes.push({
        "name": node,
        "group": graph.getNodeProperty(node, "y")
      });
      return nodeIndices[node] = i;
    });
    graph.getEdgesAsObjects().forEach(function(e) {
      return graphEdges.push({
        "target": nodeIndices[e.target],
        "source": nodeIndices[e.source],
        "value": graph.getEdgeProperty(e.id, "weight")
      });
    });
    colaGraph = {
      "nodes": graphNodes,
      "links": graphEdges
    };
    colad3.nodes(colaGraph.nodes).links(colaGraph.links).linkDistance(40).charge(-300).start(30);
    svg.append("svg:defs").selectAll("marker").data(["end"]).enter().append("svg:marker").attr("id", String).attr("viewBox", "0 -5 10 10").attr("refX", 15).attr("refY", -1.5).attr("markerWidth", 3).attr("markerHeight", 3).attr("orient", "auto").append("svg:path").attr("d", "M0,-5L10,0L0,5");
    path = svg.append("svg:g").selectAll("path").data(colad3.links()).enter().append("svg:path").attr("class", "link").attr("marker-end", "url(#end)");
    node = svg.selectAll(".node").data(colad3.nodes()).enter().append("g").attr("class", "node").attr("r", 5).call(colad3.drag);
    node.append("title").text(function(d) {
      return d.name;
    });
    return colad3.on("tick", function() {
      path.attr("d", function(d) {
        var dr, dx, dy;
        dx = d.target.x - d.source.x;
        dy = d.target.y - d.source.y;
        dr = Math.sqrt(dx * dx + dy * dy);
        return "M" + d.source.x + "," + d.source.y + "A" + dr + "," + dr + " 0 0,1 " + d.target.x + "," + d.target.y;
      });
      return node.attr("transform", function(d) {
        return "translate(" + d.x + "," + d.y + ")";
      });
    });
  };

}).call(this);
